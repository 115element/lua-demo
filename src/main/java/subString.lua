---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alex.
--- DateTime: 2022/11/11 19:37
---
local function p()
    print("123")
end

s = "123"

first = s.sub(s, 1, 1)

if first == "1" then
    p()
end

if first == "2" then
    print(2)
end

print(#"I3W3mQ6h4n356cyvlkaUv7iBLUt167504q24IA00cCH47xE36269S9cU06D6IB3GL9Oh38m5L351V7RD1nrqJ3dwR7Tcy87TloFXw805459Bc8144Qp2xcaUaAk68TY859A1C31vM22k496QIclZkZXv7A24US679nYy2nnUrn5640YR0703P0V29718b4Sci3F45M3101LYxeCu7919zr0v66440W1k5433H6ODc187NX92PQ9SF6OaL99V5G95gaZ5Ii4yL40dHF1oip98TUY37B92C7vL0u1F6WB0H4325U910e471Nrg33srO51ATPl8ykU000P656Lc0g0854g77N04cQVgN7j9CHFR7JL5q7y21tUXYqN645H1d301T1l2Bkf7318yQ30RHDxj2Y8f41C8S32pG8Sv7U7uOb0h4957k9BdgO3AQ702zbZh2M7n95gl93Ov9L739GW8H28O6NtSBX2140P0HA062lP9x7ZqayaH830uLh35C3yzLvLX4533D77w9VCz8Y909MxCz0M65a3I2JzU0N5NCj69bc9J5gLwwKXL3Tnj95MNYPY53WgSt26zvwNso91Q5oh98M5ja33nw90eT1GQjJQ47D4X7o2v5Ft3RH2ICGc8d64R07vp2ah706L0K1q0137UO2tmgH77159N2Q265L22B1ET6s1b3NO8tTYyXCg7SW2ndGM713E807E94w7Y09E904472q7g18467S2634V7K724AWx782PK50AfAj6nBMO4Y8D0p775QXz099IWYi84LY5m647Rp1xO9RP6q973h3am0UlUZT62ZD23yV4SCk3IH5034SeB0D99m77T8BavIoGHl52E507A6B46S9bZ0bCu430v70963XP6R469MFCr1I391W64Li18rx1Bi8H7X7fa97Cro5XS0y92O2Xv9K9S0jCOL34JJGdEeB5x6p4oLW209t9W8Aplnca9X9mZ478k4bL23ZA9ey1t9fu7R077772iP5pZ0V0zvxHsBA1EDRWHHz8XY50O7JGBceVF936oBxKXlRZIF8A5DW8EH2b8nPe3HA1Bm4z27Wwj62rXO110f8uG12b3eqE333DVvhqb08brC39E0zfM2n912MJ4psqzDj7H3QOS5754m890UP28mZhcV4219C5u5Hu8YJIbALoWYV5x81N40255N95QJkRr00259Nz298SZsLHUL19R594U723HMaJmU0GQ0u7R2d6H14A7qY36UfLLsNU9C9Q2b2mlE5Je3oUdJ421r81K49RX7M4fvQ0NHp0ZYSu4J3420RQ8L534TY30e83mY4hL8YxpUYYqEPKA5HA2C9DJ3FVP7P8Vi355igV3j8UvGLU6O9Y8UX574X40X93U6yW07naJ23Ea7X59g3v38VVp3F49Fptk0F3U4LqP5tu4P4tCbXTAY45BI9VRU55b0NP69pH8262CmVCZTDI7Q700BAi57VP2r871X6H4Qklq6S8A113695EJN8678jR2uU7947zPS2j98i1KllzZFu666hJvG05bNM16Tu66vs5y02B5141Vj276E8O8325Qv1ZV822Rd7t4b35L0J1DW89VD81yHGOIkCnE71Y1U7d52m753817S8wE82HQOB26DkupTE0CQHFHxTAEIN42m5Q4451962R4KChD1871z6205f775QSZH9r619g7R160Z8S7UC7MK0568IbrL983aQuVq004xP44A5902dr3119qr656tOQD2X0YZUH04F941647NUH8M0883jx39Z5a9EuMA1my89Wx13Wv3Dg684AHUXpMJIl456M4o3dx28345WhEnwh8bH6882rpfEJK8nw39QXOP92wTFE0qOI151u278P0zo0022zH5s94aF632z8F5O0HLo65eu255ZWdO57AFYcRmWf1W8571efxEG8Q9G352601DDOAg8BM3t7O1eNE6rl9029MZ5P38uRK6MMa7q400VHW7mHI38KWJ6Acj2mG5v5ReX38DN9U1OxO6B7asNMPL1ra5gDcZn2Po4Qp0jkcA65qZB8oYO1g775Ek55tHDycdUQ914b10h5ay0k88LcK6QY056Vr04l715GyQkVP7o0Nr5HJ29N6ADLkn32I2jkP1y7af17SE3fU8nCa0I1CH1EIUJ5VYVUS1808FZB81SOp9iepYU5Yf7694HSdVO779i0kL728U6qX6cxB3VT6WiF4UzD157XOh7788e0d74kiJDJ0rwiA0a82f40Vo9HS5W73fJ8TK24pI89EUC6UE550d42S3s4EQS50P0Eh40bQv4TeVLT7F45j7L4ujjW6f475K62tm51019Ih0z616XBog9374iy9Z9C1767ReiSL67797U3g1eOLu4Y2o36P781BhDlawe38J0G6v43FOAH56D12QCw2ms1oZ7xB3QBz04VXR3pyix3LJ6O9EG8Y3jZ39W0p4030ff01Pm58mB63aQO9TLlw124IQqQOL2Qj804if30LfVQ69xyDA3GAZuLtd38yUU04R3dP1S5Slrw3l4Y8QahQ0GYLZ1fbb32L4M50FrP4E0fVSk85oj14TPmGSvQEVgf94H3T1877619Uh4ZFA93z5EAr9R7y414H1OZd22PL9Ge0ELV43V7A7E5B75k04F0JYJ45G77F3E58H8xE6ZC36IX6K2A0Vd19S1699EQN6R86WF163yoy4XO0I3U5y80LmmXB30qNMpS7K9AF13lg2QY7X6S11xK812U61z40fx447E91S6Zi41W64YmZ8366E8WsM5c72oI334r58R02646523woQbR7aN14j41977l3k055R51DY3q8Z7C53CFIv082T99Ns50D46x3816LYK0bQLd84OR8Co94HGf3KI77Usm425L28Dd4tP82i88IP2xV42fm3y1OPXbu7iu6xFXPI05ZYU8A9R936qUj1wC5A7g6o53GtmO6e5rv0e0hrEA6l128X7zIJOO6611O288Yl609c885Io169L6EOGuTI2FE2497v4r2dX3K6dpPzj4E4n15nrKZW1044u0LC5M35NEkK9dQ9TYWM73X0c994ZJ7A696r9G4S8bF96d5kf9PPL65973VQ1d0RFfrPg1MlX290oL8242IRyfM9UOxczb2JQ8vR6K0RgTHM00acMKRQ08R5i5s8C87P1EVLPf19k28Q0IJ0i9L03GPJ94fJ0YYxqxf8722FEkB59026v5HVP55U87qi39f5J3tl1R45951MG0M2n079Z4g2797VM6wsZ080U13A6gM5Hv7gHe2y41709L5746p3538Xx1h712f60cA2xJF27F64FmmI4rAe3Nx8IG9kR6569tIRX9Na41243IMdRC8ud2fEuWgk5t2qF0G5k96RMl6qKYR214CDc2760V8joIX8EMA9pI9iuN62569Nsc21M6keZc180sp0n85k176CKO6wX0pZ635xO59o0z0c314c2l8eQ6EaJ85W0pZ86U92g4z9Sr0XkXl49d8988TMu7Rb6i5E04d3AY7NT9b3SO6ssAU07x42PU358LAxbbQVHg1tLY1F0chUV88A6VCzy19lS25s8D1I2xj17RVgN5q906UVi40iV9CuRlT44F7I25BZ25Ed8RH29ejVKMFlL383Xb3t2S617K3QL2ruStm396n1bd8PVH32H8hxMW1QRO6pMbv3P98etS97Wefs238N26kOpZF96zw70f0HVRDp66Z2BV4K1ZV6oV11SX8F73k0f1c1jmwcZ00jHoq5XNF2pVTJNu3mbOKdSFrVUP2L8F7vezQ5e24k3754T7HF3299cT6Kki8TgJCvGlh13R9Op7268mM4QTDqC3K91mCnI83Vz8EWOeD2u251IM924nh5zNz7R4y47c48S02F34M23VDy1j5H63xXP447x0VX49n9465o1788H1rXvob7uTH9O3JhoT6s48P9jNie664sn97h98B6t8A9du6Zi1l9xX265205Rnk33rg3Do0Dt261ESN4C41FEDtYNAIHIj40Joi452B873qX019p1rutaYAV98001i7ZVXmUC3bl02CA13mx7089UJci1JTVuIY6Z3xN90TGjE844B2693775105JquU0tlgQM87BUt2N69y1846T4GKkPMw45A96f1yK9w19aF96r3RZ72kiVX0zF77VB40hX943y2ORMkR6Bz809VlI81A5oHr00JE81HUzI8s2TxgZXpCi192W8W70r9e33IJ7BS5qSl7Oc1LPY2LYO1Vqal2hwM191DsmiK0h66m725msyyA2Zvbto35Q766C8K40Wb59400Y0k1tZ5P0ZE4q7yhG43tB0uWv43Wg21zT2a2B7z7tc015i1YjE7CsYF7jS770k15q02M075S31671Tr8r88K1kuLM0J5XTz5isU555Qy6S571JLO7V388633H87ae1CI1642e4238J2r3FMV639Zb86v5FEG1Ww41L93uL31Th0I6Y4g4S85mpyk6oJy9065DMZwm0YPRPN82KLBL3zTfG0TlO60O1zTYARh4dp7sFmDgo0c4o358QjCgRWK2H8593S751nSAsk2T06uVJ91N45n9Z45412sTsZdM21A45290lP04KK7E1Q69u587xI6R51v2GKTF0DkUod50S9QqOu36Bq31vKg945U30pmHruPD0gi4YaN34c1FXKKBr3O1p1D1V2Aj9N0lEwnR8qF1N3EQs2MBRRIF3Y11W5r84iH41Iyi363o62U6IvcC1Bo0FK8s73Q72f8b5H598aS00779XJsXo7NHAq131Q4D54G127t68jU3NFSG745kJM6FItC1EG2KP5011291RAD0v2W188Zc09tDb62u2887BAO70Bu6B4HuJJ3r2sFOh5370enhpxScnDU2971G1Z66529VQw544x6TYZZX5nSK84F557OSRBk8XQH418448w9do31DHGI120HDT81cuD9398w875MbTyt9c56G6002QYL2400Qw3Nz2828177JJ17A15826gZCHaRZ97R2g446vPY3Uy36wBOXj5FVcvCZGrpGKAN778G7182G9A99nB4uD8V28j92gUQG3NaBc9g0zI5836v83PN00c60B860v94X66VBB94hF3tI1buWa7df45R2VL6C5365980391601W6PJ2Gp9BHna9JExIH1Dhi3E5hM6m9N2W8r7q9R6u2kN0dSt2URXf14Xv586xg2H1HZa0dQR8XZ6855z676B93z9QKq91uTMFH2Tp9J7VNq2R59X2B6HXishC193393G78d8X6Hk4D06CV5340oCp2U85sUF91nm081G7BM56p4AID5LqcJL0R9Z867AJ8J9Zu4Hk42ud52DM882qCsx3f518xoL52tFOys837818Y6W279WjcEKGDD7XTUQX3Q4xJToj434Jp13OeB86YB292JxW1M9g6Aw1CXh77gmiU9brwMiZ8vyDMQI2PXVY7J1Rh00i666716OO3m9oT8CLPF9439H9v43kN4TmM741s2PwHQ539G82UE1F6U4I2T3X12950E12gt25t069m94N9mTQ9puej11jW59a2320Df7uo83KmgH837Z5j56TcJ8T90v157qGZ7UFomIR0uxyY5h1ad3757Mf476Rw60gT3glNY2zA6ZuGIVHpKAgVbLYWH0t05fwSj8ZY369Sw6060ncFx4TJ3es313B98i3Nn67S4NgG2cwdCQ1G3u92f024V6CmlQf98v37fsHtuUe0x0j18N4rk8P6M6941WQ0HC229S2N4m8dqK78PBrA6LKCG9a19oxhRq0Azn35FUCH5Ckp5FTCd459F6418P0JX8O52k6Ucxi0nX8j7h5p0mpYi013lRWidxQ220T8RF0xtwg89mV67XB11D5BVyO11R14h26kpuEg37K3I2gB7Tq1I6MeN7IXLYDA6u8br2D7EiyA4CPVL59UHR00Fp6947Y2EwvnijY75R3N9cS8cL785u56038Z21g86vm2XFQUw5D3O6CP740740a9GAz61U66H4Aq7cTT9dcYZwmJXO521N9T0m9801WI821fIqa80f09k78FcpL5ZG3o7970L7S9d1799Q35F11Q59K9U4By9b1cz063q17u6kjV3Mq62s884Jc2F1qHwE9O7wp90mLE4GTQ1sHJXSKJg6gr22S97ns4okY36VVC2kH8v4A1QT4Z6T5yNCJC7T0uFCEn60202tYQW3ZGx148dEalYHw615QlOsS53sGK8C9FJvF7pmS85a185G6Q54W6z1NU13t2JFVB9ss683qYQVF8LzoeR9Q5S5VMVNe4N4HQmTPDmkHx127w8Tbxo2NI8I73VEpa292646m7PY50t0l432j0h6J2I27tIG0k359h2N1Mj6709oSrZL96qJ3g960YC1BK3ljH8646LFP4pY19332CH6yj4671q822907O0pk61cLDo400JMOSQRu3mB2b5aru1nzk1340VVf9T39a4m027QlM9O016sKQBxh4H97174JSX926k3S137J7MV0899211HVZ5XS4Kz66KfYnfs800FAiGPnVc1uO3C7V5WX97lqU1qo803o19Z84VV90bKZ5Q4LSzWVyqC2TL77B0V95hd01476MJ6aW53v3RCYA45kyH3k0X91ADP7D9A73Hu2ICS5oipIwgS2LU8v25G3O7e530giq9H4758GK0450QM42fp082208C8nUi6J75rx459GI4wl9B616648Y2OZOLmUQ60O9QDO7dB5B9944SzD52o0L40ijOTLx24N7FeVT9k1Up23P8j7O00yGFM7Ga9c087VO293Xm7A627DEa41t0381aZg645XcN9KH300U9b13Ob1XLb725d024467Vo96C4Azt9Az7q4uV5O11zpOqVzau47s0j8GBHdbJ0C25xx7ZC5ED6bNb81u78c1P5By5U7Jqr8x29UOOc0o359V895Ps53bdMeOCC16y80ViGl7K2v3mh25ZR6F5s060NRRT0A1AOSVnd54698TIh2h0Xp8C7sz5E1U3R7vZ0E6d17ELw1867VMTC4gT23o3e8Y9AE3ZZTNH1oR6Ir3aSYB8BB1FewMP243uQx601FMJLBL31nJO7p698J6wOPZZryj9e2IMv1B1PPx5YWM39Xi8554h97EXz7UTR291GF3a91836v62a9a3j0LI703Fn29B44Z4ljTYDNQ087106623U88D7sNGTjG77M3ZESj9xt0Ol16a2jsxz5Q22f3HD475ap52vvnJyRQ54G0Y3567EU1Nm5K2fMVA62srdh885F1994S391E16S31e4k7X4H0NA5PX8rIPqEK882In6Ye7H4rK82O3k5M1OOSZVrNMHVCOg47z7165C80cKEO5L3K99vX7p20VRao4G88fNB3910O50L01gr5aw0S0ltRUJW9Y11c4Eb9QRF011W701gd12u06Klba94lA7RE7L5Q333248N17nK2Vk81U37KrxM8Z3171i4I9lz7tj64Q2Wy3u5skvUgMU8ipTtqy84PVH0L7pzkH44f4W076zS2GM03BCD6n2S6Q94C3r1n9ZORdM84aB1Rh28f3526S3x0P9K1Ph515mfUw9KfDN30532l25Cn57Y583eqE53l8AEy36iS008It6BFsU2kwx7C14B9NN40D0q62qMNX0N8f96v8uKl3z37DeG4F20wN053U02z12U30MD22DO7084ntoOMFWR1NS05P674IZOb771lPO61wq5sHl0ZWOdB5Ro9762Fn7Eu9z54lzRLLQ031Sxx49wjG5tF50HZ1Z4BR483fx61Y7xc1XWuXR81j66D54GHWUAY6SHI14X29ZU7w7o7o9S36uh506HttPYLZ0Fa3YIlvY2lB2C8U293pY9j145SEX0Jfls2MH80I3B2pxBW4Lh7v648tdEeJkp6cI9dZ016anZ7w1f5kv6pI8578ft484A8LY4eyE8Z0JJ3293nIK1GNxM2Ot0i7SK9389N3aq3r68Q2q73D691phTb53700S4Xb5cCC608F0YUAa4CxJ96JBZAQQ6N1q4uIPiYEjA365dk54f48wnSRfqp38GX0n46150mpX9i3b080mC862S2h0La9vf52YN2f9Q10xdVBXH16885l2gWlCy6502p3QFV50M2yE5UN7z4TCF42fAeDO5g92A6sbAJx07b9Px5k9GHS147UK7P613H2231hQ1320773H0s52L9Mr3Adt7vuaDT5bkP3ohaWVUH50M49GL4J0911b9B2HS14e8470EM912upMwU9T239G4WQ70Oc5xP911K8FIcD7II7N7721NNYXeoQ7p393q2rn6ZvLkB9H02Bf1cRSgf15FD3Gz9tc7tsF937MM0vf5692CzRgX939LkawMmIemN3983PV96640Y7BK12uq1578x43Gnfp7zq6NYbuKuw5haD2gpRrQ42x7F66aS6SJ7Y5D0Pg9ULBW7r9295EJ8pW589059kD5N63vHn4p1ym8XAN92J081G0T8K852pBCH5g1Y0t7XrBc1T520f0l04gkl3kZnfQ3RCL37Yl5SGh416O8g71t5lBO57I8fJ37biZW1M804P8y8b6Ur32J8g8G55zB8XAp3VH5w6Bk7309kE0g4vK84JvH5AT655I8JX94eR2w39SI03OUfPYe4831G8G76NJ34gG701HG58uc8MXP7Sa910sfM6W9onh081w77zcxxU226c2Fl8MN7nD2n27vNc5O912MxA0dPhT1h48k900ty297ET37nXPWi1bRu5TE608d47oN5aTy4wbS345La08M3i183J101A4438ds77cQZL256599Oc05X50U1B25PYD526Za855EKsOP0qT4g2p93Y34GgwKK80DS0g063Q26WPQIRyC1DjiyDKK4ZWA8843X30O9Gd70R141WzbTl2gF5jH4xMx8QD90j8w7Ht0sPM31IXNMf0uxTFHlS1sc2Udn195925wwX29AcAjI9033KH97F65Ce67A5q1ni5qIlIF1NKv25uM8G5hJ31HVlo40fsnG97WGbhWdQ8P2Hcp6z98vQI7YY6VUE0652g9z685MG6F3811Eg11zHu254m0CFkFr3P6eG9diNR3T29bA66364QjZ1DtJQ2468v2thhj6Ago5H575QX87Sa62n39437tfBFZNgT5XC2G29c8Y52228ZBP22M3Q7P870C3B416Y84Kn20k5ZV8Xu6F4c9u8Vp3M6EJF4bB2LbK62t11A1P89C5QbsF2b1ioU05OQ0YM8Q4J49721qORXHrN7Ilh52eJ2Ck980EZ3jKm2f4UVxvEaEc0R06JT396491EJx0Y7A6673XQfD39A724736Y36w86YbX17J6ABvX8kk2v12y1bOKhM3EDB21566Q68t997u70NWZC205X37RNv3r38I041dJOfd06N65017G1zw1M53u3fs8D0b4Q42j440YB7AT6812DR25125048L9owNi9P0qp7o2Czm1N03TUC7M9F15v0F4zy8N8zL1q4XTDzp1TDnKQFz5W4KZBfVNCVB2B0AIS8M97Q9eX11jNT1nqb26R8qcj879cXYG4L8tRm0f3V78F4QWUH02XDn7XLD33742yFa1NQQrf6QwW2q25T19V5oZ38G9OO12IC6H6F30V4kJlu573wN18L71Kcr8B37HPSH92Tn3882Q34Q200qOK58R0j0NkJk7gUo64436CA1SJG4T58896NM5q84265j270P65wf950S2W8AA0F70o66Rf608ErQG7fA019609GAJ3H1m1660hD9QSFA9h91708C652Y1Mx2t63IZDcv7RRt1MG76aLM3p1p3Mt62Z002q49g428uW48H70t6H6g6Vw26o78313s8D1iX2H83D1HcE0K4VL4LNAptcydNvE9JVT8daLNkI4P8Q15FX7z26nCHA2Wm494NA1dO33QmCK4F3f0wAK71O444r11PL2JRmj6E9Jt466Z643FZS3v9C9E0151gh8Me2YeI34zx9762JeTR037z49q7RB1aFU97P076Wh2XP0Sb90dTH9C88602fo964LYUCM261TGu580306B711Dz0PE13QX1mI122HS9k80K0u125qBBwK2d6XeB3l97x9V81mfKe")

local i, j = string.find("ws://192.168.2.18/ws", "ws:", 1)
print(i, j)

local var1 = tonumber(w)
print(var1) --nil

local var2 = tonumber(1233333213123)
print(var2) --123



local r1 = table.concat({ "j", "k", "l" })
print(r1)

bb = {10,20}
for key, value in pairs(bb) do
    print(key,value)
end

local var3 = string.gsub("1-2", "-", ",", 1)

local eee = "A" .. string.sub("12345",1,-2)
print(eee)